rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users: self read/write; admins can read/write any
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow write, update: if isSignedIn() && (request.auth.uid == userId || isAdmin());
    }

    // Owned collections by userId
    match /journalEntries/{docId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }
    match /moodEntries/{docId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }
    match /cycleEntries/{docId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }
    match /pregnancyEntries/{docId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }
    match /healthCycleEntries/{docId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }
    match /diaryEntries/{docId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }

    // Activity sessions (created by signed-in users; admins can read)
    match /activitySessions/{sessionId} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.uid == request.auth.uid;
      allow read: if isAdmin() || (isSignedIn() && resource.data.uid == request.auth.uid);
    }

    // Aggregated admin stats (read by admin; write by app)
    match /adminStats/{statId} {
      allow read: if isAdmin();
      allow write, update: if isSignedIn();
    }

    // Global config (read by any signed-in; write by admin)
    match /config/{docId} {
      allow read: if isSignedIn();
      allow write, update: if isAdmin();
    }

    // Admin feedback (app suggestions)
    match /feedback/{docId} {
      allow create: if isSignedIn();
      allow read, update, delete: if isAdmin();
    }

    // User feedback (submitted from UI)
    match /userFeedback/{docId} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow read: if isAdmin() || (isSignedIn() && resource.data.uid == request.auth.uid);
      allow update, delete: if isAdmin();
    }

    // User activities (analytics)
    match /userActivities/{docId} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow read: if isAdmin() || (isSignedIn() && resource.data.uid == request.auth.uid);
      allow update, delete: if isAdmin();
    }
  }
}